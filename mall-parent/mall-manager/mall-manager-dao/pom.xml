<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mall-manager</artifactId>
        <groupId>com.mall</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>mall-manager-dao</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.mall</groupId>
            <artifactId>mall-manager-pojo</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- 添加对mybatis的依赖 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.miemiedev</groupId>
            <artifactId>mybatis-paginator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
        </dependency>
        <!-- MySql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- 连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>
    </dependencies>

    <!-- 扫描mapper.xml 文件作为资源文件
        mybatis 逆向工程 生成的代码中
        接口和mapper映射文件表面上在同一个包下，但是实际编译后 mapper 映射文件不在 接口的包下
        因为不是 java 文件嘛

        一种方式是： 同下 配置一个 新的 资源目录，这个指定的是 src/main/java 目录为一个新的
            资源文件路径，有效的资源文件为 *.properties *.xml
            但是 指定了这个作为新的 资源目录。原来的 src/main/resources 目录就不是资源目录啦
            所以一般情况下，还需要在配置一个 src/main/resources 资源目录
            但是这个dao层没有资源文件，所以就不同配置啦

        另一种方式是： 在resources下新建一个和 报名相同的 目录用来存储 mapper 映射文件

     -->
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

</project>